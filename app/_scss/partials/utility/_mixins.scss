@function strip-units($val) {
  @return ($val / ($val * 0 + 1));
}

@function em($pxval, $base: $base-font-size) {
  @if not unitless($pxval) {
      $pxval: strip-units($pxval);
  }
  @if not unitless($base) {
      $base: strip-units($base);
  }
  @return ($pxval / $base) * 1em;
}

@mixin font-size($pxval: 16, $lineHeight: 1.625 ) {
  @if not unitless($pxval) {
    $pxval: strip-units($pxval);
  }
  @if not unitless($lineHeight) {
    $lineHeight: strip-units($lineHeight);
  }
  font-size: em($pxval);
  line-height: ($pxval * $lineHeight);
}

@mixin respond-to($name) {
  // Retrieves the value from the key
  $value: map-get($breakpoints, $name);

  // If the key exists in the map
  @if map-has-key($breakpoints, $name) {
    // Prints a media query based on the value
    @media #{inspect(map-get($breakpoints, $name))} {
      @content;
    }
  }

  // If the key doesn't exist in the map
  @else {
    @warn "Unfortunately, no value could be retrieved from `#{$name}`. "
        + "Please make sure it is defined in `$breakpoints` map.";
  }
}
